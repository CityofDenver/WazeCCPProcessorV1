{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppPostData":{  
         "defaultValue":"postData",
         "type":"String",
          "metadata": {
            "description": "Name of the Logic App to be created"
          }
      },
      "functionAppName":{  
         "defaultValue":"wazefunction",
         "type":"String",
          "metadata": {
            "description": "Name of the function App that fetches the Waze data"
          }
      },
     
	 
	
		"wazeURI":{
			"defaultValue":"Waze ccp URL",
			"type":"String"
		},
        "blobConnectionName": {
            "defaultValue": "wazeBlobCon",
            "type": "String"
        },
      
      
        
        "logicAppFetchData": {
            "defaultValue": "fetchData",
            "type": "String"
        },
		"serviceBusNamespace": {
            "defaultValue": "wazedemoserviceBus",
            "type": "String"
        },
		"serviceBusQueueName": {
			"defaultValue":"wazequeue",
			  "type": "string",
			  "metadata": {
				"description": "The name of the queue to add a message to"
			  }
		},
		"storageAccountName": {
            "defaultValue": "wazestorageaccount",
            "type": "String"
        }
    },
    "variables": {"$singleQuote":"'","storageACcountid":  "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"},
    "resources": [
        {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2016-06-01",
          "location": "[resourceGroup().location]",
          "name": "[parameters('blobConnectionName')]",
          "properties": {
            "api": {
              "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
            },
            "displayName": "azureblob",
            "parameterValues": {
              "accountName": "[parameters('storageAccountName')]",
              "accessKey": "[listKeys(variables('storageAccountid'),'2015-05-01-preview').key1]"
            }
          }
        },
        {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "location": "[resourceGroup().location]",
              "name": "[parameters('serviceBusNamespace')]",
              "properties": {
                "api": {
                  "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/servicebus')]"
                },
                "displayName": "servicebus",
                "parameterValues": {
                    "connectionString": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),parameters('serviceBusNamespace'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
                }
              }
            },
        {
            "comments": "Generalized from resource",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('logicAppPostData')]",
            "apiVersion": "2016-06-01",
            "location": "southcentralus",
            "tags": {},
            "scale": null,

			 "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('serviceBusNamespace'))]",
                 "[resourceId('Microsoft.Web/connections', parameters('blobConnectionName'))]"
              ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_queue_(peek-lock)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
								 "path": "[concat('/@{encodeURIComponent(', variables('$singleQuote'), parameters('serviceBusQueueName'), variables('$singleQuote'), ')}/messages/head/peek')]",
                                "queries": {
                                    "queueType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Abandon_the_message_in_a_queue": {
                            "runAfter": {
                                "postWazeData": [
                                    "TimedOut"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "post",
								 "path": "[concat('/@{encodeURIComponent(', variables('$singleQuote'), parameters('serviceBusQueueName'), variables('$singleQuote'), ')}/messages/abandon')]",
                                "queries": {
                                    "lockToken": "@triggerBody()?['LockToken']",
									"systemProperties": "None"
                                }
                            }
                        },
                        "Complete_the_message_in_a_queue": {
                            "runAfter": {
                                "postWazeData": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "delete",
								"path": "[concat('/@{encodeURIComponent(', variables('$singleQuote'), parameters('serviceBusQueueName'), variables('$singleQuote'), ')}/messages/complete')]",
                                "queries": {
                                    "lockToken": "@triggerBody()?['LockToken']",
                                    "queueType": "Main"
                                }
                            }
                        },
                        "Dead-letter_the_message_in_a_queue": {
                            "runAfter": {
                                "postWazeData": [
                                    "Failed"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "post",
								"path": "[concat('/@{encodeURIComponent(', variables('$singleQuote'), parameters('serviceBusQueueName'), variables('$singleQuote'), ')}/messages/deadletter')]",
                                "queries": {
                                    "lockToken": "@triggerBody()?['LockToken']"
                                }
                            }
                        },
                        "fetchDataFromBlob": {
                            "runAfter": {},
                            "type": "Function",
                            "inputs": {
                                "body": "@triggerBody()?['ContentType']",
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '/functions/fetchDataFromBlob')]"
                                }
                            }
                        },
                        "persistWazeAlertsData": {
                            "runAfter": {
                                "fetchDataFromBlob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": "@body('fetchDataFromBlob')",
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '/functions/persistWazeAlertsData')]"
                                }
                            }
                        },
                        "persistWazeTrafficJamData": {
                            "runAfter": {
                                "fetchDataFromBlob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": "@body('fetchDataFromBlob')",
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '/functions/persistWazeTrafficJamData')]"
                                }
                            }
                        },
                        "postWazeData": {
                            "runAfter": {
                                "persistWazeAlertsData": [
                                    "Succeeded"
                                ],
                                "persistWazeTrafficJamData": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "alerts": "@body('persistWazeAlertsData')",
                                    "jams": "@body('persistWazeTrafficJamData')"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '/functions/postWazeData')]"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
								  "connectionId": "[resourceId('Microsoft.Web/connections', parameters('serviceBusNamespace'))]",
                                "connectionName": "parameters('serviceBusNamespace')",
								 "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/servicebus')]"
                            }
                        }
                    }
                }
            }
           
        },
        {
            "comments": "Generalized from resource: '/subscriptions/8df56958-0797-4553-a92f-c51c7f46e480/resourceGroups/rg_fetchwazedata/providers/Microsoft.Logic/workflows/fetchwazedataLA'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('logicAppFetchData')]",
            "apiVersion": "2016-06-01",
            "location": "southcentralus",
            "tags": {},
			 "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('serviceBusNamespace'))]",
                 "[resourceId('Microsoft.Web/connections', parameters('blobConnectionName'))]"
              ],
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "HTTP": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 2
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "[parameters('wazeURI')]"
                            }
                        }
                    },
                    "actions": {
                        "Create_blob": {
                            "runAfter": {
                                "findcurrenttime": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/wazecontainer",
                                    "name": "@{body('findcurrenttime')}"
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Send_message": {
                            "runAfter": {
                                "findcurrenttime": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "ContentData": "@{base64(body('findcurrenttime'))}",
                                    "ContentType": "@{body('findcurrenttime')}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "post",
                               "path": "[concat('/@{encodeURIComponent(', variables('$singleQuote'), parameters('serviceBusQueueName'), variables('$singleQuote'), ')}/messages/')]",
                                "queries": {
                                    "systemProperties": "None"
                                }
                            }
                        },
                        "findcurrenttime": {
                            "runAfter": {},
                            "type": "Function",
                            "inputs": {
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '/functions/getCurrentTime')]"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('blobConnectionName'))]",
                                "connectionName": "parameters('blobConnectionName')",
								"id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
                            },
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('serviceBusNamespace'))]",
                                "connectionName": "parameters('serviceBusNamespace')",
								 "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/servicebus')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}